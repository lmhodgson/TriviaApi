{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Nanodegree\\\\TriviaApi\\\\frontend\\\\src\\\\components\\\\Header.js\";\nimport { AppBar, Toolbar, Typography, makeStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nconst useStyles = makeStyles(() => ({\n  header: {\n    backgroundColor: \"#400CCC\"\n  },\n  logo: {\n    fontFamily: \"Roboto, sans-serif\",\n    fontWeight: 600,\n    color: \"#FFFEFE\",\n    textAlign: \"left\"\n  }\n}));\nconst headerMenuItems = [{\n  label: \"List\"\n}, {\n  label: \"Add\",\n  href: \"/add\"\n}, {\n  label: \"Play\",\n  href: \"/play\"\n}];\nexport default function Header() {\n  const _useStyles = useStyles(),\n        header = _useStyles.header,\n        logo = _useStyles.logo;\n\n  const displayDesktop = () => {\n    return React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, triviaLogo);\n  };\n\n  const triviaLogo = React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Udacitrivia\");\n\n  const getMenuButtons = () => {\n    return headerMenuItems.map(({\n      label,\n      href\n    }) => {\n      return React.createElement(Button, Object.assign({\n        key: label,\n        color: \"inherit\",\n        to: href,\n        component: RouterLink\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), label);\n    });\n  };\n\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, displayDesktop()));\n}","map":{"version":3,"sources":["D:\\Programming\\Nanodegree\\TriviaApi\\frontend\\src\\components\\Header.js"],"names":["AppBar","Toolbar","Typography","makeStyles","Button","React","Link","RouterLink","useStyles","header","backgroundColor","logo","fontFamily","fontWeight","color","textAlign","headerMenuItems","label","href","Header","displayDesktop","triviaLogo","getMenuButtons","map","key","to","component"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsCC,UAAtC,EAAkDC,MAAlD,QAAgE,mBAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,OAAO;AAClCM,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE;AADX,GAD0B;AAIlCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,oBADR;AAEJC,IAAAA,UAAU,EAAE,GAFR;AAGJC,IAAAA,KAAK,EAAE,SAHH;AAIJC,IAAAA,SAAS,EAAE;AAJP;AAJ4B,CAAP,CAAD,CAA5B;AAYA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,KAAK,EAAE;AADT,CADsB,EAItB;AACEA,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAJsB,EAQtB;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CARsB,CAAxB;AAcA,eAAe,SAASC,MAAT,GAAkB;AAAA,qBACJX,SAAS,EADL;AAAA,QACrBC,MADqB,cACrBA,MADqB;AAAA,QACbE,IADa,cACbA,IADa;;AAG7B,QAAMS,cAAc,GAAG,MAAM;AACzB,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUC,UAAV,CAAP;AACH,GAFD;;AAIA,QAAMA,UAAU,GACZ,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC7B,WAAON,eAAe,CAACO,GAAhB,CAAoB,CAAC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AAC5C,aACA,oBAAC,MAAD,gBACI;AACJM,QAAAA,GAAG,EAAEP,KADD;AAEJH,QAAAA,KAAK,EAAE,SAFH;AAGJW,QAAAA,EAAE,EAAEP,IAHA;AAIJQ,QAAAA,SAAS,EAAEnB;AAJP,OADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQCU,KARD,CADA;AAYC,KAbE,CAAP;AAcC,GAfD;;AAiBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASG,cAAc,EAAvB,CADJ,CADJ;AAKH","sourcesContent":["import { AppBar, Toolbar, Typography, makeStyles, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"#400CCC\",\r\n  },\r\n  logo: {\r\n    fontFamily: \"Roboto, sans-serif\",\r\n    fontWeight: 600,\r\n    color: \"#FFFEFE\",\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n\r\nconst headerMenuItems = [\r\n  {\r\n    label: \"List\"\r\n  },\r\n  {\r\n    label: \"Add\",\r\n    href: \"/add\"\r\n  },\r\n  {\r\n    label: \"Play\",\r\n    href: \"/play\"\r\n  }\r\n];\r\n\r\nexport default function Header() {\r\n    const { header, logo } = useStyles();\r\n\r\n    const displayDesktop = () => {\r\n        return <Toolbar>{triviaLogo}</Toolbar>;\r\n    };\r\n\r\n    const triviaLogo = (\r\n        <Typography variant=\"h6\" component=\"h1\">Udacitrivia</Typography>\r\n    );\r\n\r\n    const getMenuButtons = () => {\r\n    return headerMenuItems.map(({ label, href }) => {\r\n        return (\r\n        <Button\r\n        {...{\r\n        key: label,\r\n        color: \"inherit\",\r\n        to: href,\r\n        component: RouterLink,\r\n        }}\r\n        >\r\n        {label}\r\n        </Button>\r\n        );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <AppBar>{displayDesktop()}</AppBar>\r\n        </header>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
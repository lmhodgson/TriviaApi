{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Nanodegree\\\\TriviaApi\\\\frontend\\\\src\\\\components\\\\FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Input, InputLabel, OutlinedInput, Select, MenuItem, Button } from '@material-ui/core';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/questions',\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: this.state.difficulty,\n          category: this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-question-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSelectChange = event => {\n      console.log(event);\n      console.log(e.nativeEvent.target.getAttribute(\"name\"));\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: '/categories',\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          categories: result.categories\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"add-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add a New Trivia Question\"), React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-question-form\",\n      onSubmit: this.submitQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      name: \"question-label\",\n      htmlFor: \"inputQuestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Question\"), React.createElement(Input, {\n      id: \"inputQuestion\",\n      type: \"text\",\n      name: \"question\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      name: \"answer-label\",\n      htmlFor: \"inputAnswer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Answer\"), React.createElement(Input, {\n      id: \"inputAnswer\",\n      type: \"text\",\n      name: \"answer\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"difficulty-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Difficulty\"), React.createElement(Select, {\n      labelId: \"difficulty-label\",\n      id: \"selectDifficulty\",\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"1\"), React.createElement(MenuItem, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"2\"), React.createElement(MenuItem, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"3\"), React.createElement(MenuItem, {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"4\"), React.createElement(MenuItem, {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"5\"))), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"category-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Select, {\n      labelId: \"category-label\",\n      id: \"selectCategory\",\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, Object.keys(this.state.categories).map(id => {\n      return React.createElement(MenuItem, {\n        value: id,\n        name: this.state.categories[id],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.categories[id]);\n    }))), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      size: \"large\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["D:\\Programming\\Nanodegree\\TriviaApi\\frontend\\src\\components\\FormView.js"],"names":["React","Component","$","makeStyles","FormControl","Input","InputLabel","OutlinedInput","Select","MenuItem","Button","FormView","constructor","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","target","name","value","handleSelectChange","console","log","e","nativeEvent","getAttribute","categories","componentDidMount","render","Object","keys","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl, Input, InputLabel, OutlinedInput, Select, MenuItem, Button } from '@material-ui/core';\r\n\r\nimport '../stylesheets/FormView.css';\r\n\r\nclass FormView extends Component {\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      question: \"\",\r\n      answer: \"\",\r\n      difficulty: 1,\r\n      category: 1,\r\n      categories: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    $.ajax({\r\n      url: '/categories',\r\n      type: \"GET\",\r\n      success: (result) => {\r\n        this.setState({ categories: result.categories })\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load categories. Please try your request again')\r\n        return;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  submitQuestion = (event) => {\r\n    event.preventDefault();\r\n    $.ajax({\r\n      url: '/questions',\r\n      type: \"POST\",\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        difficulty: this.state.difficulty,\r\n        category: this.state.category\r\n      }),\r\n      xhrFields: {\r\n        withCredentials: true\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        document.getElementById(\"add-question-form\").reset();\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to add question. Please try your request again')\r\n        return;\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    console.log(event);\r\n    console.log(e.nativeEvent.target.getAttribute(\"name\"));\r\n\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"add-form\">\r\n        <h2>Add a New Trivia Question</h2>\r\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\r\n            <FormControl>\r\n                <InputLabel name=\"question-label\" htmlFor=\"inputQuestion\">Question</InputLabel>\r\n                <Input id=\"inputQuestion\" type=\"text\" name=\"question\" onChange={this.handleChange}/>\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel name=\"answer-label\" htmlFor=\"inputAnswer\">Answer</InputLabel>\r\n                <Input id=\"inputAnswer\" type=\"text\" name=\"answer\" onChange={this.handleChange}/>\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel id=\"difficulty-label\">Difficulty</InputLabel>\r\n                <Select labelId=\"difficulty-label\" id=\"selectDifficulty\" onChange={this.handleSelectChange}>\r\n                    <MenuItem value={1}>1</MenuItem>\r\n                    <MenuItem value={2}>2</MenuItem>\r\n                    <MenuItem value={3}>3</MenuItem>\r\n                    <MenuItem value={4}>4</MenuItem>\r\n                    <MenuItem value={5}>5</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel id=\"category-label\">Category</InputLabel>\r\n                <Select labelId=\"category-label\" id=\"selectCategory\" onChange={this.handleSelectChange}>\r\n                    {Object.keys(this.state.categories).map(id => {\r\n                        return (\r\n                            <MenuItem value={id} name={this.state.categories[id]}>{this.state.categories[id]}</MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\">Submit</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormView;\r\n"]},"metadata":{},"sourceType":"module"}